@using MyCardCollection.ViewModel
@model IEnumerable<MyCardCollection.Models.Deck>


<section class="space-md bg-gradient overflow-hidden" style="min-height:calc(100vh - 30vh)">
    <div class="container">

        <div class="modal fade" id="deckBackgroundSelectionModal" tabindex="-1" role="dialog" style="display: none;" aria-hidden="true">
            <div class="modal-dialog modal-xl modal-center-viewport" role="document">
                <div class="modal-content">
                    <div class="modal-header modal-header-borderless justify-content-end">
                        <h3 class="m-0 w-100 text-center"style="color:black;">
                                Select Background
                        </h3>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true"><i class="icon-cross"></i>
                        </span>
                        </button>
                    </div>
                    <div class="modal-body modal-xl d-flex justify-content-center" style="max-height:75vh;overflow-y:scroll">                    
                          <div class="content row">

                        </div>
                    </div>
                </div>
            </div>
        </div>

            @if(Model.Any())
            {
                <!-- Decks list -->
                <div class="row align-items-center">
                    <div class="col-12 position-relative">
                        <ul class="row mb-3 feature-list feature-list-sm">
                            @foreach(var deck in Model)
                            {
                                <li class="col-12 col-md-6 col-lg-4">
                                    
                                    <!-- Normal Template -->
                                    <div id="deck-@deck.Id" class="card shadow">
                                        @{
                                            var deckimg = deck.Content.FirstOrDefault()==null?"":deck.Content.First().CardData.ImageURLCropped;
                                            deckimg = String.IsNullOrEmpty(deck.BackgroundImage) ? deckimg : deck.BackgroundImage;                
                                        } 
                                        <img id="deckBackgroundImage-@deck.Id" class="card-img-top" src="@deckimg" style="object-fit: cover; height:10rem; object-position:0 25%" alt="Card image cap">
                                        <div class="card-body">
                                            <h4 id="deckName-@deck.Id" class="card-title">@deck.Name</h4>
                                            <p id="deckDescription-@deck.Id" class="card-text text-body">@deck.Description </p>
                                        </div>
                                        <div class="card-footer card-footer-borderless d-flex justify-content-between">
                                            <div class="text-small">
                                                <ul class="list-inline">
                                                    <li class="list-inline-item"><i class="icon-heart mr-1"></i> 0</li>
                                                    <li class="list-inline-item"><i class="icon-message mr-1"></i>@deck.Comments.Count()</li>
                                                </ul>
                                            </div>
                                            <a class="btn btn-outline-primary btn-sm" toggled="false" onclick="ToggleComments(this,@deck.Id)">
                                                Comments
                                            </a>
                                            <button class="btn btn-sm btn-outline-primary" type="button" data-toggle="modal" data-target="#DeckOverviewModal" onclick="LoadDeckOverview(@deck.Id)">
                                                Deck Preview
                                            </button>
                                            <div class="dropup">
                                                <button class="btn btn-sm btn-outline-primary dropdown-toggle dropdown-toggle-no-arrow" type="button" id="BenchButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                    <i class="icon-dots-three-horizontal"></i>
                                                </button>
                                                <div class="dropdown-menu dropdown-menu-sm" aria-labelledby="BenchButton">
                                                    <a class="dropdown-item" onclick="ShowEditLayout(this,@deck.Id);">Edit</a>
                                                    <a class="dropdown-item" >Remove</a>
                                                    <div class="dropdown-divider"></div>
                                                    <a class="dropdown-item" href="#">Report</a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <!-- Edit Template -->
                                    <div id="editDeck-@deck.Id" style="display:none;">
                                        <!-- Partial deck edit here -->    
                                        @await Html.PartialAsync("_EditDeckTemplate", new DeckEditViewModel{
                                            DeckId = deck.Id,
                                            Name = deck.Name,
                                            Description = deck.Description,
                                            BackgroundImage = deckimg
                                        })
                                    </div>
                                    
                                </li>
                                    <div id="Comments-@deck.Id"></div>
                            }
                            </ul>
                        </div>
                    </div>
            }
            else
            {
                <!-- Not created deck yet, redirect button info -->
                <section class="height-70">
                    <div class="container">
                        <div class="row justify-content-center">
                        <div class="col-12 col-md-6 col-lg-5">
                            <div class="card card-lg text-center">
                            <div class="card-body">
                                <i class="icon-add-to-list display-4 opacity-20"></i>
                                <h1 class="h5">You haven't created anything yet</h1>
                                <p>
                                    Start creating decks from your collection by hitting the button below. Let's start the journey now
                                </p>
                                <a class="btn btn-lg btn-primary" asp-controller="DeckBuilder" asp-action="Index">Create something</a>
                            </div>
                            </div>
                        </div>
                        </div>
                    </div>
                </section>
            }

        <div class="modal fade" id="DeckOverviewModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" style="display: none;" aria-hidden="true">
            <div class="modal-dialog modal-lg modal-center-viewport" role="document">
                <div class="modal-content">
                    <div class="modal-header modal-header-borderless justify-content-end">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true"><i class="icon-cross"></i>
                            </span>
                        </button>
                    </div>
                    <div class="modal-body d-flex justify-content-center" style="max-height:85vh;overflow-y:scroll">
                        <div class="text-center w-100" id="DeckOverview_Partial">
                            <!-- CONTENT FETCHED FROM SERVER via JS and load partial view -->
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>




@section Scripts
{
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/chart.js@3.7.1/dist/chart.min.js"></script>
    <script type="text/javascript" src="~/js/decks_scripts.js"></script>
    <script type="text/javascript" src="/js/comments_script.js" asp-append-version="true"></script>
}